/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.incosyz.sms.dialog;

import com.incosyz.sms.clientcontroller.CustomerControllerImplClient;
import com.incosyz.sms.clientcontroller.Generator;
import com.incosyz.sms.clientcontroller.OrderControllerClient;
import com.incosyz.sms.config.Setting;
import com.incosyz.sms.mixmodel.DealerPrices;
import com.incosyz.sms.mixmodel.GETOrderModel;
import com.incosyz.sms.mixmodel.OrderSendModel;
import com.incosyz.sms.mixmodel.SaleBikeDetailModel;
import com.incosyz.sms.mixmodel.StockModel;
import com.incosyz.sms.model.BikeModel;
import com.incosyz.sms.model.CashModel;
import com.incosyz.sms.model.CheckModel;
import com.incosyz.sms.model.CustomerModel;
import com.incosyz.sms.model.HomePhoneModel;
import com.incosyz.sms.model.LeasingModel;
import com.incosyz.sms.model.MobileModel;
import com.incosyz.sms.model.Model;
import com.incosyz.sms.model.OrderModel;
import com.incosyz.sms.model.PaymentModel;
import com.incosyz.sms.model.RmvModel;
import com.incosyz.sms.other.CurrancyFormat;
import com.incosyz.sms.other.Internet;
import com.incosyz.sms.pdfcontroller.SalePdf;
import com.incosyz.sms.view.CreateNewSale;
import com.incosyz.sms.view.Home;
import com.itextpdf.text.DocumentException;
import java.awt.Color;
import java.io.IOException;
import java.net.MalformedURLException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.mail.MessagingException;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 * Date : Oct 27, 2015 Time : 7:35:54 PM
 *
 * @copyright INCOSYZ
 * @author Stelan
 */
public class ManageSaleDetail extends javax.swing.JFrame {

    private ArrayList<HomePhoneModel> homePhoneModels;
    private ArrayList<MobileModel> mobileModels;
    private CustomerModel customerModel;
    private CashModel cashModel;
    private ArrayList<CheckModel> checkModels;
    private LeasingModel leasingModel;

    private double rmvPrice;
    private double insurancePrice;

    private boolean isCustomerAdded;
    private boolean isPaymentAdded;

    /**
     * Creates new form SpecialConsignment
     */
    private AddCustomer addCustomer;

    public ManageSaleDetail() {
//        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);

        addCustomer = new AddCustomer(null, true);
        addCustomer.setFrame(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        customerImg = new javax.swing.JLabel();
        searchButton = new javax.swing.JButton();
        searchCustomerText = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        customerNameText = new javax.swing.JLabel();
        nicNoText = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        mobileNoFourLabel = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        addressOneLabel = new javax.swing.JLabel();
        addressTwoLabel = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        addressThreeLabel = new javax.swing.JLabel();
        mobileNoOneLabel = new javax.swing.JLabel();
        mobileNoTwoLabel = new javax.swing.JLabel();
        mobileNoThreeLabel = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        homeNoOneLabel = new javax.swing.JLabel();
        homeNoTwoLabel = new javax.swing.JLabel();
        homeNoThreeLabel = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        settlePayment = new javax.swing.JButton();
        withOutLeasing = new javax.swing.JCheckBox();
        withLeasing = new javax.swing.JCheckBox();
        jPanel4 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        bikeAmountLabel = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        rmvRegistration = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        rmvCheck = new javax.swing.JCheckBox();
        jPanel6 = new javax.swing.JPanel();
        insuranceAmount = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        insuranceCheck = new javax.swing.JCheckBox();
        jLabel13 = new javax.swing.JLabel();
        totalAmount = new javax.swing.JLabel();
        mta3Check = new javax.swing.JCheckBox();
        doCheck = new javax.swing.JCheckBox();
        idCopyCheck = new javax.swing.JCheckBox();
        paidAmount = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        haveToSettle = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        idPhotose = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        roundNoLabel = new javax.swing.JLabel();
        bikeModelNameLabel = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        wrongImg = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        paymentImg = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        doneButton = new javax.swing.JButton();
        orderDate = new org.jdesktop.swingx.JXDatePicker();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(957, 600));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Samagi Traders - Manage Sale Detail");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Sales Management System");

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Register Owner", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 14))); // NOI18N
        jPanel2.setLayout(null);

        customerImg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/incosyz/sms/image/customerHome.jpg"))); // NOI18N
        jPanel2.add(customerImg);
        customerImg.setBounds(20, 30, 390, 300);

        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/incosyz/sms/image/searchCustomer.jpg"))); // NOI18N
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        jPanel2.add(searchButton);
        searchButton.setBounds(240, 360, 50, 50);

        searchCustomerText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchCustomerTextActionPerformed(evt);
            }
        });
        jPanel2.add(searchCustomerText);
        searchCustomerText.setBounds(20, 380, 210, 30);

        jLabel15.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel15.setText("Search Customer :");
        jPanel2.add(jLabel15);
        jLabel15.setBounds(20, 350, 140, 30);

        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/incosyz/sms/image/addCustomer.jpg"))); // NOI18N
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton8);
        jButton8.setBounds(300, 360, 110, 50);

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel11.setText("Customer Name :");
        jPanel2.add(jLabel11);
        jLabel11.setBounds(20, 30, 180, 30);

        customerNameText.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        customerNameText.setForeground(new java.awt.Color(102, 102, 102));
        customerNameText.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jPanel2.add(customerNameText);
        customerNameText.setBounds(150, 30, 260, 30);

        nicNoText.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        nicNoText.setForeground(new java.awt.Color(102, 102, 102));
        nicNoText.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jPanel2.add(nicNoText);
        nicNoText.setBounds(150, 60, 260, 30);

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel12.setText("NIC No               :");
        jPanel2.add(jLabel12);
        jLabel12.setBounds(20, 60, 180, 30);

        mobileNoFourLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        mobileNoFourLabel.setForeground(new java.awt.Color(102, 102, 102));
        mobileNoFourLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jPanel2.add(mobileNoFourLabel);
        mobileNoFourLabel.setBounds(20, 300, 190, 20);

        jLabel14.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel14.setText("Mobile No          :  ");
        jPanel2.add(jLabel14);
        jLabel14.setBounds(20, 180, 180, 30);

        addressOneLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        addressOneLabel.setForeground(new java.awt.Color(102, 102, 102));
        addressOneLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jPanel2.add(addressOneLabel);
        addressOneLabel.setBounds(150, 90, 260, 30);

        addressTwoLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        addressTwoLabel.setForeground(new java.awt.Color(102, 102, 102));
        addressTwoLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jPanel2.add(addressTwoLabel);
        addressTwoLabel.setBounds(150, 120, 260, 30);

        jLabel17.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel17.setText("Address              :  ");
        jPanel2.add(jLabel17);
        jLabel17.setBounds(20, 90, 180, 30);

        addressThreeLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        addressThreeLabel.setForeground(new java.awt.Color(102, 102, 102));
        addressThreeLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jPanel2.add(addressThreeLabel);
        addressThreeLabel.setBounds(150, 150, 260, 30);

        mobileNoOneLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        mobileNoOneLabel.setForeground(new java.awt.Color(102, 102, 102));
        mobileNoOneLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jPanel2.add(mobileNoOneLabel);
        mobileNoOneLabel.setBounds(20, 210, 190, 20);

        mobileNoTwoLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        mobileNoTwoLabel.setForeground(new java.awt.Color(102, 102, 102));
        mobileNoTwoLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jPanel2.add(mobileNoTwoLabel);
        mobileNoTwoLabel.setBounds(20, 240, 190, 20);

        mobileNoThreeLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        mobileNoThreeLabel.setForeground(new java.awt.Color(102, 102, 102));
        mobileNoThreeLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jPanel2.add(mobileNoThreeLabel);
        mobileNoThreeLabel.setBounds(20, 270, 190, 20);

        jLabel21.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel21.setText("Home/Office No          :  ");
        jPanel2.add(jLabel21);
        jLabel21.setBounds(230, 180, 180, 30);

        homeNoOneLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        homeNoOneLabel.setForeground(new java.awt.Color(102, 102, 102));
        homeNoOneLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jPanel2.add(homeNoOneLabel);
        homeNoOneLabel.setBounds(230, 210, 190, 20);

        homeNoTwoLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        homeNoTwoLabel.setForeground(new java.awt.Color(102, 102, 102));
        homeNoTwoLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jPanel2.add(homeNoTwoLabel);
        homeNoTwoLabel.setBounds(230, 240, 190, 20);

        homeNoThreeLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        homeNoThreeLabel.setForeground(new java.awt.Color(102, 102, 102));
        homeNoThreeLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jPanel2.add(homeNoThreeLabel);
        homeNoThreeLabel.setBounds(230, 270, 190, 20);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Payment Detail", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 14))); // NOI18N
        jPanel3.setLayout(null);

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel9.setText("RMV Registration     :      ");
        jPanel3.add(jLabel9);
        jLabel9.setBounds(60, 80, 180, 30);

        settlePayment.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/incosyz/sms/image/settlePayment.jpg"))); // NOI18N
        settlePayment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                settlePaymentActionPerformed(evt);
            }
        });
        jPanel3.add(settlePayment);
        settlePayment.setBounds(300, 360, 110, 50);

        withOutLeasing.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(withOutLeasing);
        withOutLeasing.setText("  Without Leasing");
        withOutLeasing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                withOutLeasingActionPerformed(evt);
            }
        });
        jPanel3.add(withOutLeasing);
        withOutLeasing.setBounds(40, 160, 130, 23);

        withLeasing.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(withLeasing);
        withLeasing.setSelected(true);
        withLeasing.setText("  With Leasing");
        withLeasing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                withLeasingActionPerformed(evt);
            }
        });
        jPanel3.add(withLeasing);
        withLeasing.setBounds(40, 130, 130, 23);

        jPanel4.setBackground(new java.awt.Color(241, 240, 240));
        jPanel4.setLayout(null);

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel10.setText("Full Total                  :      ");
        jPanel4.add(jLabel10);
        jLabel10.setBounds(40, 0, 180, 30);

        bikeAmountLabel.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        bikeAmountLabel.setForeground(new java.awt.Color(102, 102, 102));
        bikeAmountLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        bikeAmountLabel.setText("217,900.00");
        jPanel4.add(bikeAmountLabel);
        bikeAmountLabel.setBounds(190, 0, 150, 30);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/incosyz/sms/image/change.jpg"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton1);
        jButton1.setBounds(360, 0, 30, 30);

        jPanel3.add(jPanel4);
        jPanel4.setBounds(20, 40, 390, 30);

        jPanel5.setBackground(new java.awt.Color(241, 240, 240));
        jPanel5.setLayout(null);

        rmvRegistration.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        rmvRegistration.setForeground(new java.awt.Color(102, 102, 102));
        rmvRegistration.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        rmvRegistration.setText("0.00");
        jPanel5.add(rmvRegistration);
        rmvRegistration.setBounds(190, 0, 150, 30);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/incosyz/sms/image/change.jpg"))); // NOI18N
        jPanel5.add(jButton4);
        jButton4.setBounds(360, 0, 30, 30);

        rmvCheck.setBackground(new java.awt.Color(241, 240, 240));
        rmvCheck.setSelected(true);
        rmvCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rmvCheckActionPerformed(evt);
            }
        });
        jPanel5.add(rmvCheck);
        rmvCheck.setBounds(10, 0, 20, 30);

        jPanel3.add(jPanel5);
        jPanel5.setBounds(20, 80, 390, 30);

        jPanel6.setBackground(new java.awt.Color(241, 240, 240));
        jPanel6.setLayout(null);

        insuranceAmount.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        insuranceAmount.setForeground(new java.awt.Color(102, 102, 102));
        insuranceAmount.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        insuranceAmount.setText("0.00");
        jPanel6.add(insuranceAmount);
        insuranceAmount.setBounds(190, 0, 150, 30);

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setText("Insurance                :");
        jPanel6.add(jLabel7);
        jLabel7.setBounds(40, 0, 150, 30);

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/incosyz/sms/image/change.jpg"))); // NOI18N
        jPanel6.add(jButton5);
        jButton5.setBounds(360, 0, 30, 30);

        insuranceCheck.setBackground(new java.awt.Color(241, 240, 240));
        insuranceCheck.setSelected(true);
        insuranceCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insuranceCheckActionPerformed(evt);
            }
        });
        jPanel6.add(insuranceCheck);
        insuranceCheck.setBounds(10, 0, 20, 30);

        jPanel3.add(jPanel6);
        jPanel6.setBounds(20, 200, 390, 30);

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel13.setText("Total Amount");
        jPanel3.add(jLabel13);
        jLabel13.setBounds(20, 250, 120, 20);

        totalAmount.setBackground(new java.awt.Color(102, 102, 102));
        totalAmount.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        totalAmount.setForeground(new java.awt.Color(102, 102, 102));
        totalAmount.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        totalAmount.setText("Rs 225,000.00");
        jPanel3.add(totalAmount);
        totalAmount.setBounds(20, 270, 260, 40);

        mta3Check.setBackground(new java.awt.Color(255, 255, 255));
        mta3Check.setText("  MTA2");
        jPanel3.add(mta3Check);
        mta3Check.setBounds(210, 160, 81, 23);

        doCheck.setBackground(new java.awt.Color(255, 255, 255));
        doCheck.setText("  DO");
        jPanel3.add(doCheck);
        doCheck.setBounds(210, 130, 47, 23);

        idCopyCheck.setBackground(new java.awt.Color(255, 255, 255));
        idCopyCheck.setText("  ID Copy");
        jPanel3.add(idCopyCheck);
        idCopyCheck.setBounds(290, 130, 81, 23);

        paidAmount.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        paidAmount.setForeground(new java.awt.Color(255, 51, 0));
        paidAmount.setText("Rs 0.00");
        jPanel3.add(paidAmount);
        paidAmount.setBounds(70, 340, 170, 20);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Paid Amount");
        jPanel3.add(jLabel5);
        jLabel5.setBounds(70, 320, 170, 20);

        haveToSettle.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        haveToSettle.setForeground(new java.awt.Color(255, 51, 0));
        haveToSettle.setText("Rs 0.00");
        jPanel3.add(haveToSettle);
        haveToSettle.setBounds(70, 390, 170, 20);

        jLabel16.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel16.setText("Have to Settle");
        jPanel3.add(jLabel16);
        jLabel16.setBounds(70, 370, 170, 20);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/incosyz/sms/image/clearMini.jpg"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton2);
        jButton2.setBounds(20, 325, 30, 30);

        idPhotose.setBackground(new java.awt.Color(255, 255, 255));
        idPhotose.setText("  ID Photos");
        jPanel3.add(idPhotose);
        idPhotose.setBounds(290, 160, 120, 23);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Round No :");

        roundNoLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        roundNoLabel.setForeground(new java.awt.Color(102, 102, 102));
        roundNoLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        roundNoLabel.setText("3009/22");

        bikeModelNameLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        bikeModelNameLabel.setForeground(new java.awt.Color(102, 102, 102));
        bikeModelNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        bikeModelNameLabel.setText("SCOOTY PEP PLUS");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Bike Model :");

        jPanel7.setLayout(null);

        wrongImg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/incosyz/sms/image/wrong.jpg"))); // NOI18N
        jPanel7.add(wrongImg);
        wrongImg.setBounds(0, 0, 50, 50);

        jPanel8.setLayout(null);

        paymentImg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/incosyz/sms/image/wrong.jpg"))); // NOI18N
        jPanel8.add(paymentImg);
        paymentImg.setBounds(0, 0, 50, 50);

        jLabel19.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(102, 102, 102));
        jLabel19.setText("Register Owner");

        jLabel20.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(102, 102, 102));
        jLabel20.setText("Payments Details");

        doneButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/incosyz/sms/image/done.jpg"))); // NOI18N
        doneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doneButtonActionPerformed(evt);
            }
        });

        jLabel4.setText("Sale Date :");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(155, 155, 155)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(roundNoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bikeModelNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(70, 70, 70)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(117, 117, 117)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(orderDate, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(doneButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addComponent(jLabel6))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel3))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(roundNoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(5, 5, 5)
                                .addComponent(bikeModelNameLabel))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(orderDate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(doneButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void withOutLeasingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_withOutLeasingActionPerformed
        try {
            Setting s = new Setting();
            String leasing = s.getProperty("RMV_WITHOUT_LEASING");
            if (!leasing.equals("")) {
                rmvPrice = Double.parseDouble(leasing);
                rmvRegistration.setText(CurrancyFormat.getCurrancyFormat(leasing));
            } else {
                JOptionPane.showMessageDialog(this, "RMV leasing price is 0 !");
            }
            setTotalAmount();
        } catch (IOException ex) {
            Logger.getLogger(ManageSaleDetail.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_withOutLeasingActionPerformed

    private void settlePaymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_settlePaymentActionPerformed
//        SettlePayment settlePayment = new SettlePayment(this, true);
//        ArrayList<CashModel> cashModels = new ArrayList<>();
//        if (cashModel != null) {
//            cashModels.add(cashModel);
//        }
//        settlePayment.setFrame(this);
//        settlePayment.setAmountPaid(finalAmount , cashModels , checkModels , leasingModel);
//        settlePayment.setVisible(true);

        payment.setDetail(finalAmount);
        if (withLeasing.isSelected()) {
            payment.leasingTrue();
        } else {
            payment.leasingFalse();
        }

        payment.setVisible(true);
    }//GEN-LAST:event_settlePaymentActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        ChangeFullTotal changeFullTotal = new ChangeFullTotal(this, true);
        changeFullTotal.setDetail(dealerPrices);
        changeFullTotal.setFrame(this);
        changeFullTotal.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
//
//        try {
//            CustomerModel customer = CustomerControllerImplClient.getCustomer(searchCustomerText.getText());
//            if (customer == null) {
//                customerImg.setVisible(true);
//                JOptionPane.showMessageDialog(this, "Customer is Not found !");
//            } else {
//                customerImg.setVisible(false);
//                customerNameText.setText(customer.getCustomerName());
//                nicNoText.setText(customer.getNicNo());
//                addressOneLabel.setText(customer.getAddressLineOne());
//                addressTwoLabel.setText(customer.getAddressLineTwo());
//                addressThreeLabel.setText(customer.getAddressLineThree());
//
//                ArrayList<MobileModel> mobile = CustomerControllerImplClient.getMobile(customer.getCustomerId());
//                if (mobile != null) {
//                    JLabel[] mobileText = {mobileNoOneLabel, mobileNoTwoLabel, mobileNoThreeLabel, mobileNoFourLabel};
//                    mobileNoOneLabel.setText("");
//                    mobileNoTwoLabel.setText("");
//                    mobileNoThreeLabel.setText("");
//                    mobileNoFourLabel.setText("");
//
//                    for (int i = 0; i < mobile.size(); i++) {
//                        mobileText[i].setText(mobile.get(i).getMobileNo());
//                    }
//                }
//                ArrayList<HomePhoneModel> homePhone = CustomerControllerImplClient.getHomePhone(customer.getCustomerId());
//                if (homePhone != null) {
//                    JLabel[] homePhoneText = {homeNoOneLabel, homeNoTwoLabel, homeNoThreeLabel};
//                    homeNoOneLabel.setText("");
//                    homeNoTwoLabel.setText("");
//                    homeNoThreeLabel.setText("");
//                    for (int i = 0; i < homePhone.size(); i++) {
//                        homePhoneText[i].setText(homePhone.get(i).getHomePhoneNo());
//                    }
//                }
//                setCustomerDetail(customerModel, homePhone, mobile);
//            }
//        } catch (NotBoundException | MalformedURLException | ClassNotFoundException | SQLException | RemoteException ex) {
//            Logger.getLogger(AddCustomer.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed

        addCustomer.setVisible(true);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void rmvCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rmvCheckActionPerformed
        setTotalAmount();
        if (rmvCheck.isSelected()) {
            withLeasing.setEnabled(true);
            withOutLeasing.setEnabled(true);
            doCheck.setEnabled(true);
            mta3Check.setEnabled(true);
            idCopyCheck.setEnabled(true);
//            rmvRegisterButton.setEnabled(true);
        } else {
            withLeasing.setEnabled(false);
            withOutLeasing.setEnabled(false);
            doCheck.setEnabled(false);
            mta3Check.setEnabled(false);
            idCopyCheck.setEnabled(false);
//            rmvRegisterButton.setEnabled(false);
        }
    }//GEN-LAST:event_rmvCheckActionPerformed

    private void insuranceCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insuranceCheckActionPerformed
        setTotalAmount();
    }//GEN-LAST:event_insuranceCheckActionPerformed

    private void doneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doneButtonActionPerformed
        boolean canOrderAdd = false;

        if (isCustomerAdded & isPaymentAdded) {
            canOrderAdd = true;
        } else {
            JOptionPane.showMessageDialog(this, "Required details is not completed. Check customer details and payment details again !");
        }

        if (canOrderAdd) {
            try {
                final CustomerModel customerModel = this.customerModel;
                final ArrayList<HomePhoneModel> homePhoneModels = this.homePhoneModels;
                final ArrayList<MobileModel> mobileModels = this.mobileModels;
                final PaymentModel paymentModel = new PaymentModel();
                final CashModel cashModel = this.cashModel;
                final ArrayList<CheckModel> checkModels = this.checkModels;
                final LeasingModel leasingModel = this.leasingModel;
                final RmvModel rmvModel = new RmvModel();
                final OrderModel orderModel = new OrderModel();

                String customerId = "";
                if (customerModel != null) {
                    customerId = Generator.generateId("Customer", "customerId", "C", 3);
                    customerModel.setCustomerId(customerId);

                    if (homePhoneModels != null) {
                        for (HomePhoneModel homePhoneModel : homePhoneModels) {
                            homePhoneModel.setCustomerId(customerId);
                        }
                    }

                    if (mobileModels != null) {
                        for (MobileModel mobileModel : mobileModels) {
                            mobileModel.setCustomerId(customerId);
                        }
                    }

                    String paymentId = Generator.generateId("Payment", "paymentId", "P", 3);
                    paymentModel.setPaymentId(paymentId);
                    paymentModel.setInsuranceAmount(String.valueOf(insurancePrice));
                    paymentModel.setOrderAmount("0");
                    paymentModel.setRmvAmount(String.valueOf(rmvPrice));
                    paymentModel.setNote(dealerPrices.getValueNote());
                    paymentModel.setCommision(dealerPrices.getCommision());
                    paymentModel.setBikeAmount(dealerPrices.getBikeAmount());
                    paymentModel.setOtherPaymentAmount(dealerPrices.getOtherPayment());

                    if (cashModel != null) {
                        String cashId = Generator.generateId("Cash", "cashId", "C", 3);
                        cashModel.setCashId(cashId);
                        cashModel.setPaymentId(paymentId);
                    }

                    if (checkModels != null) {
                        String checkId = "";
                        for (CheckModel checkModel : checkModels) {
                            checkModel.setChequeId(checkId);
                            checkModel.setPaymentId(paymentId);
//                            checkModel.setNote(saleBikeDetailModel.getRoundNo());
                        }
                    }

                    if (leasingModel != null) {
                        String leasingId = Generator.generateId("Leasing", "leasingId", "L", 3);
                        leasingModel.setLeasingId(leasingId);
                        leasingModel.setPaymentId(paymentId);
                        leasingModel.setSnCharge("0.00");
                    }

                    String rmvId = null;
//                    if (rmvCheck.isSelected()) {
                    rmvId = Generator.generateId("Rmv", "rmvId", "R", 3);
                    rmvModel.setRmvId(rmvId);
                    rmvModel.setDoNo(doCheck.isSelected() ? "1" : "0");
                    rmvModel.setMta3(mta3Check.isSelected() ? "1" : "0");
                    rmvModel.setIdCopy(idCopyCheck.isSelected() ? "1" : "0");
                    rmvModel.setIdPhotos(idPhotose.isSelected() ? "1" : "0");
                    rmvModel.setIsLeasing(withLeasing.isSelected() ? "1" : "0");

//                    }
                    //User =========================
                    DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                    DateFormat timeFormat = new SimpleDateFormat("hh:mm:ss");

                    String orderId = Generator.generateId("OrderTable", "orderId", "O", 3);
                    orderModel.setOrderId(orderId);
                    orderModel.setRoundNo(saleBikeDetailModel.getRoundNo());
                    orderModel.setBikeModelId(bikeModel.getBikeModelId());
                    orderModel.setCustomerId(customerId);
                    orderModel.setRmvId(rmvId);

                    if (Home.USER_MODEL == null) {
                        orderModel.setUserId("U001");
                    } else {
                        orderModel.setUserId(Home.USER_MODEL.getUserId());
                    }

                    orderModel.setPaymentId(paymentId);
                    orderModel.setOrderTime(timeFormat.format(new Date()));
                    orderModel.setOrderDate(dateFormat.format(orderDate.getDate()));
                    orderModel.setNote("");
                    orderModel.setOrderAmount(String.valueOf(finalAmount));
                    orderModel.setRmv(rmvCheck.isSelected() ? "1" : "0");
                    orderModel.setInsurance(insuranceCheck.isSelected() ? "1" : "0");

                    OrderSendModel orderSendModel = new OrderSendModel()
                            .setCashModel(cashModel)
                            .setCheckModels(checkModels)
                            .setCustomerModel(customerModel)
                            .setHomePhoneModels(homePhoneModels)
                            .setLeasingModel(leasingModel)
                            .setMobileModels(mobileModels)
                            .setOrderModel(orderModel)
                            .setPaymentModel(paymentModel)
                            .setRmvModel(rmvModel)
                            .setUserModel(Home.USER_MODEL)
                            .setBikeModel(bikeModel);

                    ArrayList<CashModel> cashModels = new ArrayList<>();
                    if (cashModel != null) {
                        cashModels.add(cashModel);
                    }
                    Model model = new Model();
                    model.setModelId(saleBikeDetailModel.getModelId());
                    model.setModelName(saleBikeDetailModel.getModelName());

                    StockModel stockModel = new StockModel();
                    if (saleBikeDetailModel != null) {
                        stockModel.setBatchId(saleBikeDetailModel.getBatchId());
                        stockModel.setBikeOption(bikeModel.getBikeOption());
                        stockModel.setCapacity(bikeModel.getCapacity());
                        stockModel.setChassisNo(saleBikeDetailModel.getChassisNo());
                        stockModel.setColour(saleBikeDetailModel.getColour());
                        stockModel.setCommision(bikeModel.getCommision());
                        stockModel.setModelId(bikeModel.getModelId());
                    }

                    final GETOrderModel gETOrderModel = new GETOrderModel()
                            .setBikeModel(bikeModel)
                            .setCashModels(cashModels)
                            .setCheckModels(checkModels)
                            .setCustomerModel(customerModel)
                            .setHomePhoneModels(homePhoneModels)
                            .setLeasingModel(leasingModel)
                            .setMobileModels(mobileModels)
                            .setModel(model)
                            .setOrderModel(orderModel)
                            .setPaymentModel(paymentModel)
                            .setRmvModel(rmvModel)
                            .setStockModel(stockModel)
                            .setUserModel(Home.USER_MODEL);

                    boolean addOrder = OrderControllerClient.addOrder(orderSendModel, gETOrderModel);
                    if (addOrder) {
                        if (Internet.isInternetAvailable()) {
                            new Thread() {

                                @Override
                                public void run() {

                                    SalePdf pdf = new SalePdf(gETOrderModel);
                                    try {
                                        pdf.sendEmail();
                                    } catch (MessagingException | IOException | DocumentException ex) {
                                        Logger.getLogger(ManageSaleDetail.class.getName()).log(Level.SEVERE, null, ex);
                                    }

                                }

                            }.start();
                        }
                        saleTableModel.removeRow(selectedRow);
                        JOptionPane.showMessageDialog(this, "Order added successfully !");
                        dispose();
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Customer details not completed !");
                }

            } catch (NotBoundException | MalformedURLException | RemoteException | ClassNotFoundException | SQLException ex) {
                Logger.getLogger(ManageSaleDetail.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_doneButtonActionPerformed

    private void searchCustomerTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchCustomerTextActionPerformed
        searchButton.doClick();
    }//GEN-LAST:event_searchCustomerTextActionPerformed


    private void withLeasingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_withLeasingActionPerformed
        try {
            Setting s = new Setting();
            String leasing = s.getProperty("RMV_WITH_LEASING");
            if (!leasing.equals("")) {
                rmvPrice = Double.parseDouble(leasing);
                rmvRegistration.setText(CurrancyFormat.getCurrancyFormat(leasing));
            } else {
                JOptionPane.showMessageDialog(this, "RMV With leasing price is 0 !");
            }
            setTotalAmount();
        } catch (IOException ex) {
            Logger.getLogger(ManageSaleDetail.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_withLeasingActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        payment = new SettlePayment(this, true);
        payment.setDetail(finalAmount);
        payment.setFrame(this);

        paidAmount.setText("Rs 0.00");
        haveToSettle.setText(totalAmount.getText());

        paidAmount.setForeground(Color.RED);
        haveToSettle.setForeground(Color.RED);

        paymentImg.setIcon(new ImageIcon("./src/com/incosyz/sms/image/wrong.jpg"));
        isPaymentAdded = false;

        rmvCheck.setEnabled(true);
        withLeasing.setEnabled(true);
        withOutLeasing.setEnabled(true);
        insuranceCheck.setEnabled(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageSaleDetail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageSaleDetail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageSaleDetail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageSaleDetail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ManageSaleDetail dialog = new ManageSaleDetail();
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addressOneLabel;
    private javax.swing.JLabel addressThreeLabel;
    private javax.swing.JLabel addressTwoLabel;
    private javax.swing.JLabel bikeAmountLabel;
    private javax.swing.JLabel bikeModelNameLabel;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel customerImg;
    private javax.swing.JLabel customerNameText;
    private javax.swing.JCheckBox doCheck;
    private javax.swing.JButton doneButton;
    private javax.swing.JLabel haveToSettle;
    private javax.swing.JLabel homeNoOneLabel;
    private javax.swing.JLabel homeNoThreeLabel;
    private javax.swing.JLabel homeNoTwoLabel;
    private javax.swing.JCheckBox idCopyCheck;
    private javax.swing.JCheckBox idPhotose;
    private javax.swing.JLabel insuranceAmount;
    private javax.swing.JCheckBox insuranceCheck;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JLabel mobileNoFourLabel;
    private javax.swing.JLabel mobileNoOneLabel;
    private javax.swing.JLabel mobileNoThreeLabel;
    private javax.swing.JLabel mobileNoTwoLabel;
    private javax.swing.JCheckBox mta3Check;
    private javax.swing.JLabel nicNoText;
    private org.jdesktop.swingx.JXDatePicker orderDate;
    private javax.swing.JLabel paidAmount;
    private javax.swing.JLabel paymentImg;
    private javax.swing.JCheckBox rmvCheck;
    private javax.swing.JLabel rmvRegistration;
    private javax.swing.JLabel roundNoLabel;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchCustomerText;
    private javax.swing.JButton settlePayment;
    private javax.swing.JLabel totalAmount;
    private javax.swing.JCheckBox withLeasing;
    private javax.swing.JCheckBox withOutLeasing;
    private javax.swing.JLabel wrongImg;
    // End of variables declaration//GEN-END:variables

    private SaleBikeDetailModel saleBikeDetailModel;
    private BikeModel bikeModel;
    private DealerPrices dealerPrices;
    private double finalAmount;

    private SettlePayment payment;

    public void setSaleDetail(SaleBikeDetailModel bikeDetailModel, BikeModel bikeModel, DealerPrices dealerPrices) throws IOException {
        this.saleBikeDetailModel = bikeDetailModel;
        this.bikeModel = bikeModel;
        this.dealerPrices = dealerPrices;

        Setting s = new Setting();
        String rmv = s.getProperty("RMV_WITH_LEASING");
        String insurance = s.getProperty("INSURANCE");
        this.dealerPrices.setRmvRegistration(rmv);
        this.dealerPrices.setInsurance(s.getProperty(insurance));

        rmvPrice = Double.parseDouble(rmv);
        insurancePrice = Double.parseDouble(insurance);

        rmvRegistration.setText("Rs " + CurrancyFormat.getCurrancyFormat(rmv));
        insuranceAmount.setText("Rs " + CurrancyFormat.getCurrancyFormat(insurance));

        setDetailComponents();
        setTotalAmount();

        haveToSettle.setText(totalAmount.getText());

        payment = new SettlePayment(this, true);
        payment.setDetail(finalAmount);
        payment.setFrame(this);
    }

    public void setDetailComponents() {
        bikeAmountLabel.setText("Rs " + CurrancyFormat.getCurrancyFormat(dealerPrices.getBikeAmount()));
        roundNoLabel.setText(saleBikeDetailModel.getRoundNo());
        bikeModelNameLabel.setText(saleBikeDetailModel.getModelName().toUpperCase());
    }

    public void setDealerPrices(DealerPrices dealerPrices) {
        this.dealerPrices = dealerPrices;
        bikeAmountLabel.setText("Rs " + CurrancyFormat.getCurrancyFormat(dealerPrices.getBikeAmount()));
        setTotalAmount();
    }

    public void setTotalAmount() {
        double bikeAmount = Double.parseDouble(dealerPrices.getBikeAmount());

        double rmvRegistrationAmount = 0;
        if (rmvCheck.isSelected()) {
            rmvRegistrationAmount = rmvPrice;
        }

        double insurance = 0;
        if (insuranceCheck.isSelected()) {
            insurance = insurancePrice;
        }

        finalAmount = bikeAmount + rmvRegistrationAmount + insurance;
        totalAmount.setText("Rs " + CurrancyFormat.getCurrancyFormat(finalAmount));
    }

    public void setCustomerDetail(CustomerModel customerModel, ArrayList<HomePhoneModel> homePhoneModels, ArrayList<MobileModel> mobileModels) {
        this.customerModel = customerModel;
        this.homePhoneModels = homePhoneModels;
        this.mobileModels = mobileModels;

        customerImg.setVisible(false);
        customerNameText.setText(customerModel.getCustomerName());
        nicNoText.setText(customerModel.getNicNo());
        addressOneLabel.setText(customerModel.getAddressLineOne());
        addressTwoLabel.setText(customerModel.getAddressLineTwo());
        addressThreeLabel.setText(customerModel.getAddressLineThree());

        mobileNoOneLabel.setText("");
        mobileNoTwoLabel.setText("");
        mobileNoThreeLabel.setText("");
        mobileNoFourLabel.setText("");
        JLabel[] mobile = {mobileNoOneLabel, mobileNoTwoLabel, mobileNoThreeLabel, mobileNoFourLabel};

        for (int i = 0; i < mobileModels.size(); i++) {
            mobile[i].setText(mobileModels.get(i).getMobileNo());
        }

        homeNoOneLabel.setText("");
        homeNoTwoLabel.setText("");
        homeNoThreeLabel.setText("");
        JLabel[] homePhone = {homeNoOneLabel, homeNoTwoLabel, homeNoThreeLabel};

        for (int i = 0; i < homePhoneModels.size(); i++) {
            homePhone[i].setText(homePhoneModels.get(i).getHomePhoneNo());
        }

        wrongImg.setIcon(new ImageIcon("./src/com/incosyz/sms/image/right.jpg"));
        isCustomerAdded = true;
    }

    public void setPaymentDetail(CashModel cashModel, ArrayList<CheckModel> checkModels, LeasingModel leasingModel) {
        this.cashModel = cashModel;
        this.checkModels = checkModels;
        this.leasingModel = leasingModel;
        System.out.println("ABC + " + leasingModel);
        paymentImg.setIcon(new ImageIcon("./src/com/incosyz/sms/image/right.jpg"));
        isPaymentAdded = true;
    }

    public void setPaidHaveSettle(String paidAmountText, String haveToSettleText, double have) {
        if (have == 0) {
            paidAmount.setForeground(new Color(0, 204, 102));
            haveToSettle.setForeground(new Color(0, 204, 102));
        }
        rmvCheck.setEnabled(false);
        withLeasing.setEnabled(false);
        withOutLeasing.setEnabled(false);
        insuranceCheck.setEnabled(false);

        paidAmount.setText(paidAmountText);
        haveToSettle.setText(haveToSettleText);
    }

    private DefaultTableModel saleTableModel;
    private CreateNewSale createNewSale;
    private int selectedRow;
    
    public void setSaleModel(DefaultTableModel saleTableModel, CreateNewSale aThis , int selectedRow) {
        this.saleTableModel = saleTableModel;
        this.createNewSale = aThis;
        this.selectedRow = selectedRow;
    }
}
