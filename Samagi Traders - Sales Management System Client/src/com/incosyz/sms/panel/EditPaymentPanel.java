/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.incosyz.sms.panel;

import com.incosyz.sms.clientcontroller.CustomerControllerImplClient;
import com.incosyz.sms.clientcontroller.Generator;
import com.incosyz.sms.clientcontroller.SaleControllerImplClient;
import com.incosyz.sms.dialog.EditSale;
import com.incosyz.sms.mixmodel.CRNPlateInfo;
import com.incosyz.sms.mixmodel.GETOrderModel;
import com.incosyz.sms.model.CashModel;
import com.incosyz.sms.model.CheckModel;
import com.incosyz.sms.model.CustomerModel;
import com.incosyz.sms.model.LeasingModel;
import com.incosyz.sms.model.NoteTableModel;
import com.incosyz.sms.model.OrderModel;
import com.incosyz.sms.model.PaymentModel;
import com.incosyz.sms.model.RmvModel;
import com.incosyz.sms.other.CurrancyFormat;
import com.incosyz.sms.other.Validation;
import java.awt.Color;
import java.net.MalformedURLException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 * Date : Nov 16, 2015 Time : 6:41:03 PM
 *
 * @copyright INCOSYZ
 * @author Stelan
 */
public class EditPaymentPanel extends javax.swing.JPanel {

    /**
     * Creates new form EditCustomerPanel
     */
    public EditPaymentPanel() {
        initComponents();
        cRIDate.setDate(null);
        crRDate.setDate(null);
        nPlateIDate.setDate(null);
        nPlateRDate.setDate(null);
        snLeasingPanel.setVisible(false);
        leasingPanel.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        leasingMainPanel = new javax.swing.JPanel();
        snLeasingPanel = new javax.swing.JPanel();
        mta2Check = new javax.swing.JCheckBox();
        mtaCheck = new javax.swing.JCheckBox();
        doCheck1 = new javax.swing.JCheckBox();
        gapCheck = new javax.swing.JCheckBox();
        gsCheck = new javax.swing.JCheckBox();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        garanerDetail = new javax.swing.JTextArea();
        leasingPanel = new javax.swing.JPanel();
        mta3Check1 = new javax.swing.JCheckBox();
        do2Check = new javax.swing.JCheckBox();
        idCopyCheck1 = new javax.swing.JCheckBox();
        doneButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        rmvRegistration = new javax.swing.JLabel();
        rmvCheck = new javax.swing.JCheckBox();
        jLabel9 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        insuranceAmount = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        insuranceCheck = new javax.swing.JCheckBox();
        doCheck = new javax.swing.JCheckBox();
        mta3Check = new javax.swing.JCheckBox();
        idCopyCheck = new javax.swing.JCheckBox();
        withLeasing = new javax.swing.JCheckBox();
        withOutLeasing = new javax.swing.JCheckBox();
        jPanel8 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        bikeAmountLabel = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        snChargeText = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        amoutText = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        haveToSettle = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        settledPayment = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        totalAmountText = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        doneButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        noteText = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        cRTick = new javax.swing.JCheckBox();
        cRIDate = new org.jdesktop.swingx.JXDatePicker();
        jLabel4 = new javax.swing.JLabel();
        crRDate = new org.jdesktop.swingx.JXDatePicker();
        jLabel6 = new javax.swing.JLabel();
        nPlateTick = new javax.swing.JCheckBox();
        nPlateRDate = new org.jdesktop.swingx.JXDatePicker();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        nPlateIDate = new org.jdesktop.swingx.JXDatePicker();

        leasingMainPanel.setBackground(new java.awt.Color(255, 255, 255));
        leasingMainPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Leasing Amount", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 14))); // NOI18N
        leasingMainPanel.setLayout(null);

        snLeasingPanel.setBackground(new java.awt.Color(255, 255, 255));
        snLeasingPanel.setLayout(null);

        mta2Check.setBackground(new java.awt.Color(255, 255, 255));
        mta2Check.setText("  MTA3");
        snLeasingPanel.add(mta2Check);
        mta2Check.setBounds(0, 30, 81, 23);

        mtaCheck.setBackground(new java.awt.Color(255, 255, 255));
        mtaCheck.setText("  MTA2");
        snLeasingPanel.add(mtaCheck);
        mtaCheck.setBounds(0, 10, 81, 23);

        doCheck1.setBackground(new java.awt.Color(255, 255, 255));
        doCheck1.setText("  DO");
        snLeasingPanel.add(doCheck1);
        doCheck1.setBounds(0, 50, 81, 23);

        gapCheck.setBackground(new java.awt.Color(255, 255, 255));
        gapCheck.setText("  GAP");
        snLeasingPanel.add(gapCheck);
        gapCheck.setBounds(100, 30, 81, 23);

        gsCheck.setBackground(new java.awt.Color(255, 255, 255));
        gsCheck.setText("  GS");
        snLeasingPanel.add(gsCheck);
        gsCheck.setBounds(100, 10, 81, 23);

        jLabel17.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel17.setText("Garanter Detail :");
        snLeasingPanel.add(jLabel17);
        jLabel17.setBounds(190, 0, 160, 20);

        garanerDetail.setColumns(20);
        garanerDetail.setRows(5);
        jScrollPane3.setViewportView(garanerDetail);

        snLeasingPanel.add(jScrollPane3);
        jScrollPane3.setBounds(190, 20, 190, 60);

        leasingMainPanel.add(snLeasingPanel);
        snLeasingPanel.setBounds(30, 20, 380, 80);

        leasingPanel.setBackground(new java.awt.Color(255, 255, 255));
        leasingPanel.setLayout(null);

        mta3Check1.setBackground(new java.awt.Color(255, 255, 255));
        mta3Check1.setText("  MTA3");
        mta3Check1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mta3Check1ActionPerformed(evt);
            }
        });
        leasingPanel.add(mta3Check1);
        mta3Check1.setBounds(0, 10, 81, 23);

        do2Check.setBackground(new java.awt.Color(255, 255, 255));
        do2Check.setText("  DO");
        leasingPanel.add(do2Check);
        do2Check.setBounds(0, 30, 81, 23);

        idCopyCheck1.setBackground(new java.awt.Color(255, 255, 255));
        idCopyCheck1.setText("  ID Copy");
        leasingPanel.add(idCopyCheck1);
        idCopyCheck1.setBounds(100, 10, 81, 23);

        leasingMainPanel.add(leasingPanel);
        leasingPanel.setBounds(30, 20, 190, 70);

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(null);

        doneButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/incosyz/sms/image/done.jpg"))); // NOI18N
        doneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doneButtonActionPerformed(evt);
            }
        });
        add(doneButton);
        doneButton.setBounds(760, 390, 110, 50);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Leasing Amount", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 14))); // NOI18N
        jPanel1.setLayout(null);

        jPanel6.setBackground(new java.awt.Color(241, 240, 240));
        jPanel6.setLayout(null);

        rmvRegistration.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        rmvRegistration.setForeground(new java.awt.Color(102, 102, 102));
        rmvRegistration.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        rmvRegistration.setText("6,500.00");
        jPanel6.add(rmvRegistration);
        rmvRegistration.setBounds(190, 0, 150, 30);

        rmvCheck.setBackground(new java.awt.Color(241, 240, 240));
        rmvCheck.setSelected(true);
        rmvCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rmvCheckActionPerformed(evt);
            }
        });
        jPanel6.add(rmvCheck);
        rmvCheck.setBounds(10, 0, 20, 30);

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel9.setText("RMV Registration     :      ");
        jPanel6.add(jLabel9);
        jLabel9.setBounds(40, 0, 180, 30);

        jPanel1.add(jPanel6);
        jPanel6.setBounds(20, 70, 390, 30);

        jPanel7.setBackground(new java.awt.Color(241, 240, 240));
        jPanel7.setLayout(null);

        insuranceAmount.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        insuranceAmount.setForeground(new java.awt.Color(102, 102, 102));
        insuranceAmount.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        insuranceAmount.setText("600.00");
        jPanel7.add(insuranceAmount);
        insuranceAmount.setBounds(190, 0, 150, 30);

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setText("Insurance                :");
        jPanel7.add(jLabel7);
        jLabel7.setBounds(40, 0, 150, 30);

        insuranceCheck.setBackground(new java.awt.Color(241, 240, 240));
        insuranceCheck.setSelected(true);
        insuranceCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insuranceCheckActionPerformed(evt);
            }
        });
        jPanel7.add(insuranceCheck);
        insuranceCheck.setBounds(10, 0, 20, 30);

        jPanel1.add(jPanel7);
        jPanel7.setBounds(20, 190, 390, 30);

        doCheck.setBackground(new java.awt.Color(255, 255, 255));
        doCheck.setText("  DO");
        jPanel1.add(doCheck);
        doCheck.setBounds(210, 110, 47, 23);

        mta3Check.setBackground(new java.awt.Color(255, 255, 255));
        mta3Check.setText("  MTA2");
        jPanel1.add(mta3Check);
        mta3Check.setBounds(210, 140, 81, 23);

        idCopyCheck.setBackground(new java.awt.Color(255, 255, 255));
        idCopyCheck.setText("  ID Copy");
        jPanel1.add(idCopyCheck);
        idCopyCheck.setBounds(290, 110, 81, 23);

        withLeasing.setBackground(new java.awt.Color(255, 255, 255));
        withLeasing.setSelected(true);
        withLeasing.setText("  With Leasing");
        jPanel1.add(withLeasing);
        withLeasing.setBounds(40, 110, 130, 23);

        withOutLeasing.setBackground(new java.awt.Color(255, 255, 255));
        withOutLeasing.setText("  Without Leasing");
        withOutLeasing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                withOutLeasingActionPerformed(evt);
            }
        });
        jPanel1.add(withOutLeasing);
        withOutLeasing.setBounds(40, 140, 130, 23);

        jPanel8.setBackground(new java.awt.Color(241, 240, 240));
        jPanel8.setLayout(null);

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel10.setText("Full Total                  :      ");
        jPanel8.add(jLabel10);
        jLabel10.setBounds(40, 0, 180, 30);

        bikeAmountLabel.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        bikeAmountLabel.setForeground(new java.awt.Color(102, 102, 102));
        bikeAmountLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        bikeAmountLabel.setText("217,900.00");
        jPanel8.add(bikeAmountLabel);
        bikeAmountLabel.setBounds(190, 0, 150, 30);

        jPanel1.add(jPanel8);
        jPanel8.setBounds(20, 30, 390, 30);

        jPanel9.setBackground(new java.awt.Color(241, 240, 240));
        jPanel9.setLayout(null);

        snChargeText.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        snChargeText.setForeground(new java.awt.Color(102, 102, 102));
        snChargeText.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        snChargeText.setText("600.00");
        jPanel9.add(snChargeText);
        snChargeText.setBounds(190, 0, 150, 30);

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel8.setText("SN Charges            :");
        jPanel9.add(jLabel8);
        jLabel8.setBounds(40, 0, 150, 30);

        jPanel1.add(jPanel9);
        jPanel9.setBounds(20, 260, 390, 30);

        jCheckBox1.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBox1.setText("  ID Photose");
        jPanel1.add(jCheckBox1);
        jCheckBox1.setBounds(290, 140, 100, 23);

        add(jPanel1);
        jPanel1.setBounds(20, 10, 430, 310);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Leasing Amount", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 14))); // NOI18N
        jPanel2.setLayout(null);

        amoutText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                amoutTextActionPerformed(evt);
            }
        });
        amoutText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                amoutTextKeyReleased(evt);
            }
        });
        jPanel2.add(amoutText);
        amoutText.setBounds(80, 210, 230, 30);

        jPanel3.setBackground(new java.awt.Color(250, 250, 250));
        jPanel3.setLayout(null);

        haveToSettle.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        haveToSettle.setForeground(new java.awt.Color(102, 102, 102));
        haveToSettle.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        haveToSettle.setText("0.00");
        haveToSettle.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        haveToSettle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                haveToSettleMouseClicked(evt);
            }
        });
        jPanel3.add(haveToSettle);
        haveToSettle.setBounds(10, 20, 150, 40);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Have to Settle :");
        jPanel3.add(jLabel2);
        jLabel2.setBounds(10, 0, 130, 30);

        jPanel2.add(jPanel3);
        jPanel3.setBounds(200, 90, 160, 60);

        jPanel5.setBackground(new java.awt.Color(250, 250, 250));
        jPanel5.setLayout(null);

        settledPayment.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        settledPayment.setForeground(new java.awt.Color(102, 102, 102));
        settledPayment.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        settledPayment.setText("0.00");
        jPanel5.add(settledPayment);
        settledPayment.setBounds(10, 20, 150, 40);

        jLabel16.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel16.setText("Payment Settled :");
        jPanel5.add(jLabel16);
        jLabel16.setBounds(10, 0, 130, 30);

        jPanel2.add(jPanel5);
        jPanel5.setBounds(30, 90, 160, 60);

        jPanel4.setBackground(new java.awt.Color(250, 250, 250));
        jPanel4.setLayout(null);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Order Amount :");
        jPanel4.add(jLabel5);
        jLabel5.setBounds(20, 10, 120, 30);

        totalAmountText.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        totalAmountText.setForeground(new java.awt.Color(102, 102, 102));
        totalAmountText.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        totalAmountText.setText("217,900.00");
        jPanel4.add(totalAmountText);
        totalAmountText.setBounds(140, 10, 170, 30);

        jPanel2.add(jPanel4);
        jPanel4.setBounds(30, 30, 330, 50);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Amount That Have to Pay : ");
        jPanel2.add(jLabel3);
        jLabel3.setBounds(80, 180, 230, 30);

        add(jPanel2);
        jPanel2.setBounds(470, 10, 400, 250);

        doneButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/incosyz/sms/image/done.jpg"))); // NOI18N
        doneButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doneButton1ActionPerformed(evt);
            }
        });
        add(doneButton1);
        doneButton1.setBounds(340, 380, 110, 50);

        noteText.setColumns(20);
        noteText.setRows(5);
        jScrollPane1.setViewportView(noteText);

        add(jScrollPane1);
        jScrollPane1.setBounds(20, 356, 310, 80);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Note :");
        add(jLabel1);
        jLabel1.setBounds(20, 330, 230, 30);

        cRTick.setText(" CR");
        add(cRTick);
        cRTick.setBounds(470, 290, 90, 30);
        add(cRIDate);
        cRIDate.setBounds(700, 290, 110, 30);

        jLabel4.setText("Issue Date :");
        add(jLabel4);
        jLabel4.setBounds(700, 270, 70, 20);
        add(crRDate);
        crRDate.setBounds(570, 290, 110, 30);

        jLabel6.setText("Received Date :");
        add(jLabel6);
        jLabel6.setBounds(570, 270, 130, 20);

        nPlateTick.setText("NPlate");
        add(nPlateTick);
        nPlateTick.setBounds(470, 350, 90, 30);
        add(nPlateRDate);
        nPlateRDate.setBounds(570, 350, 110, 30);

        jLabel11.setText("Received Date :");
        add(jLabel11);
        jLabel11.setBounds(570, 330, 130, 20);

        jLabel12.setText("Issue Date :");
        add(jLabel12);
        jLabel12.setBounds(700, 330, 70, 20);
        add(nPlateIDate);
        nPlateIDate.setBounds(700, 350, 110, 30);
    }// </editor-fold>//GEN-END:initComponents

    private void amoutTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_amoutTextActionPerformed

    }//GEN-LAST:event_amoutTextActionPerformed

    private void doneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doneButtonActionPerformed
        try {
            Validation v = new Validation();
            Color c = amoutText.getForeground();

            boolean canAdd = false;
            if (c.equals(Color.RED)) {
                canAdd = false;
                JOptionPane.showMessageDialog(this, "Input data currancy wrong format or Invalid. check again. !");
            } else {
                canAdd = true;
            }

            if (canAdd) {
                String amount = amoutText.getText();
                if (Double.parseDouble(amount) == 0) {
                    JOptionPane.showMessageDialog(this, "Amount is 0 !");
                } else if (cashUpdate) {
                    DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                    CashModel cashModel = new CashModel();
                    cashModel.setCashAmount(amount);
                    cashModel.setCashDate(dateFormat.format(new Date()));
                    cashModel.setPaymentId(paymentModel.getPaymentId());
                    String cashId = null;
                    try {
                        cashId = Generator.generateId("Cash", "cashId", "C", 3);
                    } catch (NotBoundException | MalformedURLException | RemoteException | ClassNotFoundException | SQLException ex) {
                        Logger.getLogger(EditPaymentPanel.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    cashModel.setCashId(cashId);
                    try {
                        boolean addCash = CustomerControllerImplClient.addCash(cashModel);
                        if (addCash) {
                            double paid = Double.parseDouble(amount);
                            more = more - paid;
                            haveToSettle.setText(CurrancyFormat.getCurrancyFormat(more));
                            amoutText.setText(String.format("%1.2f", more));
                            JOptionPane.showMessageDialog(this, "Payment completed !");
                        }
                    } catch (NotBoundException | MalformedURLException | ClassNotFoundException | SQLException | RemoteException ex) {
                        Logger.getLogger(EditPaymentPanel.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else {

                }

            }

            OrderModel orderModel = gETOrderModel.getOrderModel();
            CRNPlateInfo info = new CRNPlateInfo();
            info.setOrderId(orderModel.getOrderId());
            info.setCr(cRTick.isSelected());
            if (cRTick.isSelected()) {
                info.setCrR(crRDate.getDate());
                info.setCrI(cRIDate.getDate());
            } else {
                info.setCrR(null);
                info.setCrI(null);
            }

            info.setnPlate(nPlateTick.isSelected());
            if (nPlateTick.isSelected()) {
                info.setnPlateI(nPlateIDate.getDate());
                info.setnPlateR(nPlateRDate.getDate());
            }
            CustomerControllerImplClient.updateCRNPlate(info);
        } catch (NotBoundException | MalformedURLException | ClassNotFoundException | SQLException | RemoteException ex) {
            Logger.getLogger(EditPaymentPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_doneButtonActionPerformed

    private void rmvCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rmvCheckActionPerformed

    }//GEN-LAST:event_rmvCheckActionPerformed

    private void insuranceCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insuranceCheckActionPerformed

    }//GEN-LAST:event_insuranceCheckActionPerformed

    private void withOutLeasingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_withOutLeasingActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_withOutLeasingActionPerformed

    private void mta3Check1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mta3Check1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mta3Check1ActionPerformed

    private void doneButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doneButton1ActionPerformed
        String mta = "0";
        if (mtaCheck.isSelected()) {
            mta = "1";
        }
        String mta2 = "0";
        if (mta2Check.isSelected()) {
            mta2 = "1";
        }
        String mta3 = "0";
        if (mta3Check.isSelected()) {
            mta3 = "1";
        }
        String do1 = "0";
        if (doCheck1.isSelected()) {
            do1 = "1";
        }
        String do2 = "0";
        if (do2Check.isSelected()) {
            do2 = "1";
        }
        String idCopy = "0";
        if (idCopyCheck1.isSelected()) {
            idCopy = "1";
        }
        String gs = "0";
        if (gsCheck.isSelected()) {
            gs = "1";
        }
        String gap = "0";
        if (gapCheck.isSelected()) {
            gap = "1";
        }
        String garanter = garanerDetail.getText();

        String doo = "0";
        if (doCheck.isSelected()) {
            doo = "1";
        }

        String idPhoto = "0";
        if (jCheckBox1.isSelected()) {
            idPhoto = "1";
        }

        String idCopy2 = idCopyCheck.isSelected() ? "1" : "0";
        String mta33 = mta3Check.isSelected() ? "1" : "0";
        boolean updateLeasing = false;
        if (gETOrderModel.getLeasingModel() != null) {

            LeasingModel leasingModel = gETOrderModel.getLeasingModel();
            leasingModel.setMta(mta);
            leasingModel.setMta2(mta2);
            leasingModel.setMta3(mta3);
            leasingModel.setDoNo(do1);
            leasingModel.setDoNo2(do2);
            leasingModel.setIdCopy(idCopy);
            leasingModel.setGs(gs);
            leasingModel.setGap(gap);
            leasingModel.setGaranter(garanter);

            try {
                updateLeasing = CustomerControllerImplClient.updateLeasing(leasingModel);
            } catch (NotBoundException | MalformedURLException | ClassNotFoundException | SQLException | RemoteException ex) {
                Logger.getLogger(EditPaymentPanel.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
        boolean rmv = false;
        if (gETOrderModel.getRmvModel() != null) {
            RmvModel rmvModel = gETOrderModel.getRmvModel();
            rmvModel.setDoNo(doo);
            rmvModel.setIdCopy(idCopy2);

            rmvModel.setMta3(mta33);
            rmvModel.setIdPhotos(idPhoto);
            try {
                rmv = CustomerControllerImplClient.updateRmv(rmvModel);
            } catch (NotBoundException | MalformedURLException | ClassNotFoundException | SQLException | RemoteException ex) {
                Logger.getLogger(EditPaymentPanel.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
        System.out.println(updateLeasing & rmv);
        System.out.println(updateLeasing);
        System.out.println(rmv);
//        if (updateLeasing & rmv) {
        String text = noteText.getText();
        String orderId = gETOrderModel.getOrderModel().getOrderId();
        System.out.println("B");
        try {
            boolean saveNote = SaleControllerImplClient.saveNote(orderId, text);
            System.out.println(orderId + " " + text);
            System.out.println(saveNote);
            if (saveNote) {

            } else {
                JOptionPane.showMessageDialog(this, "Note Saved Failed");
                return;
            }
        } catch (NotBoundException | MalformedURLException | RemoteException | SQLException | ClassNotFoundException ex) {
            Logger.getLogger(EditPaymentPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println("A");
        JOptionPane.showMessageDialog(this, "Updated successfully !");
//        } else if (rmv) {
//            JOptionPane.showMessageDialog(this, "RMV Detail updated successfully !");
//        } else if (updateLeasing) {
//            JOptionPane.showMessageDialog(this, "Leaasing Detail updated successfully !");
//        }
    }//GEN-LAST:event_doneButton1ActionPerformed

    private void amoutTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_amoutTextKeyReleased
        try {
            Validation v = new Validation();
            v.inputCurrancy(amoutText);

            double haveTo = more;
            double amount = Double.parseDouble(amoutText.getText());

            while (amount > haveTo) {
                amoutText.setText(amoutText.getText().substring(0, amoutText.getText().length() - 1));
                amount = Double.parseDouble(amoutText.getText());
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_amoutTextKeyReleased

    private void haveToSettleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_haveToSettleMouseClicked
        amoutText.setText(String.format("%1.2f", more));
        amoutText.setForeground(Color.BLACK);
    }//GEN-LAST:event_haveToSettleMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField amoutText;
    private javax.swing.JLabel bikeAmountLabel;
    private org.jdesktop.swingx.JXDatePicker cRIDate;
    private javax.swing.JCheckBox cRTick;
    private org.jdesktop.swingx.JXDatePicker crRDate;
    private javax.swing.JCheckBox do2Check;
    private javax.swing.JCheckBox doCheck;
    private javax.swing.JCheckBox doCheck1;
    private javax.swing.JButton doneButton;
    private javax.swing.JButton doneButton1;
    private javax.swing.JCheckBox gapCheck;
    private javax.swing.JTextArea garanerDetail;
    private javax.swing.JCheckBox gsCheck;
    private javax.swing.JLabel haveToSettle;
    private javax.swing.JCheckBox idCopyCheck;
    private javax.swing.JCheckBox idCopyCheck1;
    private javax.swing.JLabel insuranceAmount;
    private javax.swing.JCheckBox insuranceCheck;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPanel leasingMainPanel;
    private javax.swing.JPanel leasingPanel;
    private javax.swing.JCheckBox mta2Check;
    private javax.swing.JCheckBox mta3Check;
    private javax.swing.JCheckBox mta3Check1;
    private javax.swing.JCheckBox mtaCheck;
    private org.jdesktop.swingx.JXDatePicker nPlateIDate;
    private org.jdesktop.swingx.JXDatePicker nPlateRDate;
    private javax.swing.JCheckBox nPlateTick;
    private javax.swing.JTextArea noteText;
    private javax.swing.JCheckBox rmvCheck;
    private javax.swing.JLabel rmvRegistration;
    private javax.swing.JLabel settledPayment;
    private javax.swing.JLabel snChargeText;
    private javax.swing.JPanel snLeasingPanel;
    private javax.swing.JLabel totalAmountText;
    private javax.swing.JCheckBox withLeasing;
    private javax.swing.JCheckBox withOutLeasing;
    // End of variables declaration//GEN-END:variables

    private EditSale editSale;
    private CustomerModel customerModel;
    private PaymentModel paymentModel;
    private double more;
    private boolean cashUpdate = true;
    private GETOrderModel gETOrderModel;

    public void setFrame(EditSale editSale) {
        this.editSale = editSale;
    }

    public void setDetail(GETOrderModel gETOrderModel) {
        this.paymentModel = gETOrderModel.getPaymentModel();
        this.gETOrderModel = gETOrderModel;

        OrderModel orderModel = gETOrderModel.getOrderModel();
        if (orderModel != null) {
            cRTick.setSelected(orderModel.isCr());
            nPlateTick.setSelected(orderModel.isnPlate());

            cRIDate.setDate(orderModel.getCrI());
            crRDate.setDate(orderModel.getCrR());
            nPlateIDate.setDate(orderModel.getnPlateI());
            nPlateRDate.setDate(orderModel.getnPlateR());

            try {
                NoteTableModel infoNoteTable = SaleControllerImplClient.getInfoNoteTable(orderModel.getOrderId());
                if (infoNoteTable != null) {
                    noteText.setText(infoNoteTable.getNote());
                }
            } catch (NotBoundException | MalformedURLException | RemoteException | SQLException | ClassNotFoundException ex) {
                Logger.getLogger(EditPaymentPanel.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

        double cash = 0;
        ArrayList<CashModel> cashModels = gETOrderModel.getCashModels();
        for (CashModel cashModel : cashModels) {
            cash += Double.parseDouble(cashModel.getCashAmount());
        }

        double cheque = 0;
        ArrayList<CheckModel> checkModels = gETOrderModel.getCheckModels();
        for (CheckModel checkModel : checkModels) {
            cheque += Double.parseDouble(checkModel.getAmount());
        }

        double leasing = 0;
        if (gETOrderModel.getLeasingModel() != null) {
            leasing = Double.parseDouble(gETOrderModel.getLeasingModel().getLeasingAmount());
        }

        double totalAmount = cash + cheque + leasing;

        double orderAmount = Double.parseDouble(gETOrderModel.getOrderModel().getOrderAmount());

        more = orderAmount - totalAmount;
        LeasingModel leasingModel = gETOrderModel.getLeasingModel();
        double snCharge = 0;
        if (leasingModel != null) {
            snCharge = Double.parseDouble(leasingModel.getSnCharge());
            more += snCharge;
            orderAmount += snCharge;
        }

        if (more == 0) {
            cashUpdate = false;
        }

        settledPayment.setText("Rs " + CurrancyFormat.getCurrancyFormat(totalAmount));
        totalAmountText.setText("Rs " + CurrancyFormat.getCurrancyFormat(orderAmount));

        haveToSettle.setText("Rs " + CurrancyFormat.getCurrancyFormat(more));
        amoutText.setText(String.format("%1.2f", more));

//        String leasingName = "";
//        if (gETOrderModel.getLeasingModel() != null) {
//            leasingName = gETOrderModel.getLeasingModel().getLeasingName();
//
//            if (leasingName.equals("0")) {
//                snLeasingPanel.setVisible(false);
//                leasingPanel.setVisible(true);
//
//                String mta3 = gETOrderModel.getLeasingModel().getMta3();
//                if (mta3.equals("1")) {
//                    mta3Check1.setSelected(true);
//                } else {
//                    mta3Check1.setSelected(false);
//                }
//
//                String do2 = gETOrderModel.getLeasingModel().getDoNo2();
//                if (do2.equals("1")) {
//                    do2Check.setSelected(true);
//                } else {
//                    do2Check.setSelected(false);
//                }
//
//                String idCopy = gETOrderModel.getLeasingModel().getIdCopy();
//                if (idCopy.equals("1")) {
//                    idCopyCheck1.setSelected(true);
//                } else {
//                    idCopyCheck1.setSelected(false);
//                }
//            } else {
//                snLeasingPanel.setVisible(true);
//                leasingPanel.setVisible(false);
//
//                String mta1 = gETOrderModel.getLeasingModel().getMta();
//                if (mta1.equals("1")) {
//                    mtaCheck.setSelected(true);
//                } else {
//                    mtaCheck.setSelected(false);
//                }
//
//                String mta2 = gETOrderModel.getLeasingModel().getMta2();
//                if (mta2.equals("1")) {
//                    mta2Check.setSelected(true);
//                } else {
//                    mta2Check.setSelected(false);
//                }
//
//                String do1 = gETOrderModel.getLeasingModel().getDoNo();
//                if (do1.equals("1")) {
//                    doCheck1.setSelected(true);
//                } else {
//                    doCheck1.setSelected(false);
//                }
//
//                String gs = gETOrderModel.getLeasingModel().getGs();
//                if (gs.equals("1")) {
//                    gsCheck.setSelected(true);
//                } else {
//                    gsCheck.setSelected(false);
//                }
//
//                String gap = gETOrderModel.getLeasingModel().getGap();
//                if (gap.equals("1")) {
//                    gapCheck.setSelected(true);
//                } else {
//                    gapCheck.setSelected(false);
//                }
//
//                garanerDetail.setText(gETOrderModel.getLeasingModel().getGaranter());
//
//                withLeasing.setSelected(true);
//                withOutLeasing.setSelected(false);
//            }
//        } else {
//            leasingMainPanel.setVisible(false);
//            withLeasing.setSelected(false);
//            withOutLeasing.setSelected(true);
//        }
        RmvModel rmvModel = gETOrderModel.getRmvModel();

        if (rmvModel != null) {
            rmvCheck.setEnabled(true);

            if (rmvModel.getMta3().equals("1")) {
                mta3Check.setSelected(true);
            } else {
                mta3Check.setSelected(false);
            }

            if (rmvModel.getDoNo().equals("1")) {
                doCheck.setSelected(true);
            } else {
                doCheck.setSelected(false);
            }

            if (rmvModel.getIdCopy().equals("1")) {
                idCopyCheck.setSelected(true);
            } else {
                idCopyCheck.setSelected(false);
            }

            if (rmvModel.getIdPhotos().equals("1")) {
                jCheckBox1.setSelected(true);
            } else {
                jCheckBox1.setSelected(false);
            }
        } else {
            rmvCheck.setEnabled(false);
        }

        String rmv = gETOrderModel.getOrderModel().getRmv();
        if (rmv.equals("1")) {
            rmvCheck.setSelected(true);
            doCheck.setEnabled(true);
            idCopyCheck.setEnabled(true);
            mta3Check.setEnabled(true);

        } else {
            rmvCheck.setSelected(false);
            doCheck.setEnabled(false);
            idCopyCheck.setEnabled(false);
            mta3Check.setEnabled(false);
        }

        rmvCheck.setEnabled(false);
        withLeasing.setEnabled(false);
        withOutLeasing.setEnabled(false);

        snChargeText.setText("Rs " + CurrancyFormat.getCurrancyFormat(snCharge));

        if (gETOrderModel.getBikeModel() != null) {

            String bikeAmount = gETOrderModel.getBikeModel().getNetAmount();
            bikeAmountLabel.setText("Rs " + CurrancyFormat.getCurrancyFormat(bikeAmount));
        }
    }

}
