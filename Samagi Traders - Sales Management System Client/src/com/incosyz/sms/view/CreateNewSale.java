/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.incosyz.sms.view;

import com.incosyz.sms.clientcontroller.DeliveryNoteControllerClient;
import com.incosyz.sms.clientcontroller.OrderControllerClient;
import com.incosyz.sms.clientcontroller.PriceAnnouncementControllerClient;
import com.incosyz.sms.clientcontroller.SaleControllerImplClient;
import com.incosyz.sms.dialog.ManageSaleDetail;
import com.incosyz.sms.dialog.Value;
import com.incosyz.sms.mixmodel.DealerPrices;
import com.incosyz.sms.mixmodel.SaleBikeDetailModel;
import com.incosyz.sms.model.BikeModel;
import com.incosyz.sms.model.PriceAnnouncementModel;
import com.incosyz.sms.model.SpecialDealerModel;
import com.incosyz.sms.observable.CreateNewObserverble;
import com.incosyz.sms.other.CurrancyFormat;
import static com.incosyz.sms.view.Home.img;
import java.io.IOException;
import java.net.MalformedURLException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Stelan
 */
public class CreateNewSale extends javax.swing.JFrame {

    /**
     * Creates new form ManagePriceAnnouncement
     */
    private CreateNewObserverble createNewObserverble;

    public CreateNewSale() {
        initComponents();
        setLocationRelativeTo(null);
        constructor();

        try {
            createNewObserverble = new CreateNewObserverble(this);
            boolean addObserver = OrderControllerClient.addObserver(createNewObserverble);
        } catch (RemoteException | NotBoundException | MalformedURLException | ClassNotFoundException | SQLException ex) {
            Logger.getLogger(CreateNewSale.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void constructor() {
        getStart();
        setIconImage(img);
    }

    private void getStart() {
        try {
            jPanel4.setVisible(false);
            specialConsignmentCheck.setEnabled(false);

            priceAnnouncementModels = new ArrayList<>();
            saleTableModel = (DefaultTableModel) saleTable.getModel();
            priceAnnouncementCombo.removeAllItems();

            ArrayList<PriceAnnouncementModel> priceAnnouncementModels = PriceAnnouncementControllerClient.getPriceAnnouncement();
            for (PriceAnnouncementModel priceAnnouncementModel : priceAnnouncementModels) {
                addPriceannouncement(priceAnnouncementModel);
            }

            ArrayList<SaleBikeDetailModel> saleBikeDetailModels = SaleControllerImplClient.getAllSaleDetail();
            addModelsToTable(saleBikeDetailModels);

        } catch (NotBoundException | MalformedURLException | RemoteException | SQLException | ClassNotFoundException ex) {
            Logger.getLogger(CreateNewSale.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        saleTable = new javax.swing.JTable();
        newPriceAnnouncement1 = new javax.swing.JButton();
        consignmentCheck = new javax.swing.JCheckBox();
        newPriceAnnouncement2 = new javax.swing.JButton();
        priceAnnouncementCombo = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        count = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        searchCombo = new javax.swing.JComboBox();
        searchText = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        roundNoLabel = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        modelNameLabel = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        optionLabel = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        chassisNoLabel = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        colourLabel = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        engineNoLabel = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        netAmountLabel = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        commisionLabel = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        netRemittanceLabel = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        dealerMarginLabel = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        specialNetRemittanceLabel = new javax.swing.JLabel();
        specialConsignmentCheck = new javax.swing.JCheckBox();
        countinueSaleButton = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        newPriceAnnouncement10 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Samagi Traders | Sales Management System | Create New Sales");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Samagi Traders - Sale Management");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(30, 10, 350, 40);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Sales Management System");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(30, 40, 230, 30);

        saleTable.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        saleTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Round No", "Model Name", "EngineNo", "Chassis No", "Colour"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        saleTable.setRowHeight(25);
        saleTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saleTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(saleTable);
        if (saleTable.getColumnModel().getColumnCount() > 0) {
            saleTable.getColumnModel().getColumn(2).setPreferredWidth(120);
            saleTable.getColumnModel().getColumn(3).setPreferredWidth(120);
        }

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(253, 159, 660, 280);

        newPriceAnnouncement1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/incosyz/sms/image/manageValues.jpg"))); // NOI18N
        newPriceAnnouncement1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newPriceAnnouncement1ActionPerformed(evt);
            }
        });
        jPanel1.add(newPriceAnnouncement1);
        newPriceAnnouncement1.setBounds(150, 90, 110, 50);

        consignmentCheck.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(consignmentCheck);
        consignmentCheck.setSelected(true);
        consignmentCheck.setText(" Consignment Dealers");
        consignmentCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consignmentCheckActionPerformed(evt);
            }
        });
        jPanel1.add(consignmentCheck);
        consignmentCheck.setBounds(720, 470, 190, 23);

        newPriceAnnouncement2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/incosyz/sms/image/advanceSearch_1.jpg"))); // NOI18N
        newPriceAnnouncement2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newPriceAnnouncement2ActionPerformed(evt);
            }
        });
        jPanel1.add(newPriceAnnouncement2);
        newPriceAnnouncement2.setBounds(30, 90, 110, 50);

        priceAnnouncementCombo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        priceAnnouncementCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                priceAnnouncementComboItemStateChanged(evt);
            }
        });
        priceAnnouncementCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceAnnouncementComboActionPerformed(evt);
            }
        });
        jPanel1.add(priceAnnouncementCombo);
        priceAnnouncementCombo.setBounds(710, 50, 200, 30);

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel9.setText("Search :");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(380, 20, 181, 30);

        count.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        count.setForeground(new java.awt.Color(102, 102, 102));
        count.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        count.setText("01");
        jPanel1.add(count);
        count.setBounds(840, 100, 70, 50);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel5);
        jPanel5.setBounds(0, 0, 0, 0);

        searchCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Round No", "Bike Model", "Colour", "Chassis No", "Engine No" }));
        jPanel1.add(searchCombo);
        searchCombo.setBounds(380, 50, 110, 30);

        searchText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchTextKeyReleased(evt);
            }
        });
        jPanel1.add(searchText);
        searchText.setBounds(500, 50, 200, 30);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Bike Detail", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 14))); // NOI18N
        jPanel6.setLayout(null);

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel11.setText("Round No :");
        jPanel6.add(jLabel11);
        jLabel11.setBounds(20, 20, 170, 30);

        roundNoLabel.setBackground(new java.awt.Color(204, 204, 204));
        roundNoLabel.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        roundNoLabel.setForeground(new java.awt.Color(102, 102, 102));
        jPanel6.add(roundNoLabel);
        roundNoLabel.setBounds(20, 50, 180, 20);

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel13.setText("Model Name :");
        jPanel6.add(jLabel13);
        jLabel13.setBounds(20, 80, 180, 30);

        modelNameLabel.setBackground(new java.awt.Color(204, 204, 204));
        modelNameLabel.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        modelNameLabel.setForeground(new java.awt.Color(102, 102, 102));
        jPanel6.add(modelNameLabel);
        modelNameLabel.setBounds(20, 100, 180, 40);

        jLabel15.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel15.setText("Options :");
        jPanel6.add(jLabel15);
        jLabel15.setBounds(20, 140, 150, 30);

        optionLabel.setBackground(new java.awt.Color(204, 204, 204));
        optionLabel.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        optionLabel.setForeground(new java.awt.Color(102, 102, 102));
        jPanel6.add(optionLabel);
        optionLabel.setBounds(20, 170, 180, 20);

        jLabel16.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel16.setText("Chassis No :");
        jPanel6.add(jLabel16);
        jLabel16.setBounds(20, 200, 200, 30);

        chassisNoLabel.setBackground(new java.awt.Color(204, 204, 204));
        chassisNoLabel.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        chassisNoLabel.setForeground(new java.awt.Color(102, 102, 102));
        jPanel6.add(chassisNoLabel);
        chassisNoLabel.setBounds(20, 230, 200, 20);

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel12.setText("Colour :");
        jPanel6.add(jLabel12);
        jLabel12.setBounds(20, 260, 160, 30);

        colourLabel.setBackground(new java.awt.Color(204, 204, 204));
        colourLabel.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        colourLabel.setForeground(new java.awt.Color(102, 102, 102));
        jPanel6.add(colourLabel);
        colourLabel.setBounds(20, 290, 200, 20);

        jLabel14.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel14.setText("Engine No :");
        jPanel6.add(jLabel14);
        jLabel14.setBounds(20, 320, 200, 30);

        engineNoLabel.setBackground(new java.awt.Color(204, 204, 204));
        engineNoLabel.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        engineNoLabel.setForeground(new java.awt.Color(102, 102, 102));
        jPanel6.add(engineNoLabel);
        engineNoLabel.setBounds(20, 350, 200, 20);

        jLabel17.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel17.setText("Selling price :");
        jPanel6.add(jLabel17);
        jLabel17.setBounds(20, 380, 110, 30);

        netAmountLabel.setBackground(new java.awt.Color(204, 204, 204));
        netAmountLabel.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        netAmountLabel.setForeground(new java.awt.Color(102, 102, 102));
        netAmountLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jPanel6.add(netAmountLabel);
        netAmountLabel.setBounds(20, 410, 170, 30);

        jPanel1.add(jPanel6);
        jPanel6.setBounds(30, 150, 210, 450);

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setLayout(null);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Consignment Dealer", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 14))); // NOI18N
        jPanel2.setLayout(null);

        jLabel18.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel18.setText("Commission");
        jPanel2.add(jLabel18);
        jLabel18.setBounds(40, 30, 120, 20);

        commisionLabel.setBackground(new java.awt.Color(204, 204, 204));
        commisionLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        commisionLabel.setForeground(new java.awt.Color(102, 102, 102));
        commisionLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jPanel2.add(commisionLabel);
        commisionLabel.setBounds(40, 50, 150, 20);

        jLabel19.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel19.setText("Net remittance :");
        jPanel2.add(jLabel19);
        jLabel19.setBounds(40, 80, 200, 20);

        netRemittanceLabel.setBackground(new java.awt.Color(204, 204, 204));
        netRemittanceLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        netRemittanceLabel.setForeground(new java.awt.Color(102, 102, 102));
        netRemittanceLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jPanel2.add(netRemittanceLabel);
        netRemittanceLabel.setBounds(40, 100, 150, 20);

        jPanel7.add(jPanel2);
        jPanel2.setBounds(10, 10, 220, 140);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Consignment Dealer", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 14))); // NOI18N
        jPanel4.setLayout(null);

        jLabel21.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel21.setText("Dealer Margine :");
        jPanel4.add(jLabel21);
        jLabel21.setBounds(40, 30, 180, 20);

        dealerMarginLabel.setBackground(new java.awt.Color(204, 204, 204));
        dealerMarginLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        dealerMarginLabel.setForeground(new java.awt.Color(102, 102, 102));
        dealerMarginLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jPanel4.add(dealerMarginLabel);
        dealerMarginLabel.setBounds(40, 50, 110, 20);

        jLabel20.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel20.setText("Special Price :");
        jPanel4.add(jLabel20);
        jLabel20.setBounds(40, 80, 200, 20);

        specialNetRemittanceLabel.setBackground(new java.awt.Color(204, 204, 204));
        specialNetRemittanceLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        specialNetRemittanceLabel.setForeground(new java.awt.Color(102, 102, 102));
        specialNetRemittanceLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jPanel4.add(specialNetRemittanceLabel);
        specialNetRemittanceLabel.setBounds(40, 100, 140, 20);

        jPanel7.add(jPanel4);
        jPanel4.setBounds(240, 10, 230, 140);

        jPanel1.add(jPanel7);
        jPanel7.setBounds(240, 450, 475, 150);

        specialConsignmentCheck.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(specialConsignmentCheck);
        specialConsignmentCheck.setText(" Special Consignment Dealers");
        specialConsignmentCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                specialConsignmentCheckActionPerformed(evt);
            }
        });
        jPanel1.add(specialConsignmentCheck);
        specialConsignmentCheck.setBounds(720, 500, 190, 23);

        countinueSaleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/incosyz/sms/image/countinueSale_1.jpg"))); // NOI18N
        countinueSaleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                countinueSaleButtonActionPerformed(evt);
            }
        });
        jPanel1.add(countinueSaleButton);
        countinueSaleButton.setBounds(800, 540, 110, 50);

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel10.setText("Price Announcement Date :");
        jPanel1.add(jLabel10);
        jLabel10.setBounds(710, 20, 181, 30);

        newPriceAnnouncement10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/incosyz/sms/image/refresh.jpg"))); // NOI18N
        newPriceAnnouncement10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newPriceAnnouncement10ActionPerformed(evt);
            }
        });
        jPanel1.add(newPriceAnnouncement10);
        newPriceAnnouncement10.setBounds(270, 90, 50, 50);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 945, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 608, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void newPriceAnnouncement1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newPriceAnnouncement1ActionPerformed
        Value v = new Value(this, true);
        v.setVisible(true);
    }//GEN-LAST:event_newPriceAnnouncement1ActionPerformed

    private void consignmentCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consignmentCheckActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_consignmentCheckActionPerformed

    private void specialConsignmentCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_specialConsignmentCheckActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_specialConsignmentCheckActionPerformed

    private void newPriceAnnouncement2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newPriceAnnouncement2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newPriceAnnouncement2ActionPerformed

    private void priceAnnouncementComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_priceAnnouncementComboItemStateChanged

    }//GEN-LAST:event_priceAnnouncementComboItemStateChanged

    private void priceAnnouncementComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceAnnouncementComboActionPerformed

    }//GEN-LAST:event_priceAnnouncementComboActionPerformed

    private SaleBikeDetailModel saleBikeDetailModel;
    private BikeModel bikeModel;
    private void saleTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saleTableMouseClicked
        saleTableClick();
    }//GEN-LAST:event_saleTableMouseClicked

    private double netAmountA = 0;
    private double specialNetAmountA = 0;
    private double commisionA = 0;
    private double netRemittanceA = 0;
    private double dealerMargineA = 0;
    private double specialNetRemittanceA = 0;

    private void countinueSaleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_countinueSaleButtonActionPerformed
        if (canCountinue) {
            ManageSaleDetail getSaleDetail = new ManageSaleDetail();

            DealerPrices dealerPrices = new DealerPrices();
            if (consignmentCheck.isSelected()) {
                dealerPrices.setBikeAmount(String.valueOf(netAmountA));
                dealerPrices.setCommision(String.valueOf(commisionA));
                dealerPrices.setNetRemittance(String.valueOf(netRemittanceA));
            } else {
                dealerPrices.setBikeAmount(String.valueOf(specialNetAmountA));
                dealerPrices.setCommision(String.valueOf(dealerMargineA));
                dealerPrices.setNetRemittance(String.valueOf(specialNetRemittanceA));
            }
            try {
                getSaleDetail.setSaleDetail(saleBikeDetailModel, bikeModel, dealerPrices);
            } catch (IOException ex) {
                Logger.getLogger(CreateNewSale.class.getName()).log(Level.SEVERE, null, ex);
            }
            getSaleDetail.setSaleModel(saleTableModel , this , saleTable.getSelectedRow());
            getSaleDetail.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, " you cannot continue sale. Select model to countinue. Price announcement not found !");
        }


    }//GEN-LAST:event_countinueSaleButtonActionPerformed

    private void searchTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTextKeyReleased
        try {
            if (searchCombo.getSelectedItem().equals("Round No")) {
                ArrayList<SaleBikeDetailModel> saleBikeDetailModels = SaleControllerImplClient.getAllSaleDetail(searchText.getText());
                addModelsToTable(saleBikeDetailModels);
            } else if (searchCombo.getSelectedItem().equals("Bike Model")) {
                ArrayList<SaleBikeDetailModel> saleBikeDetailModels = SaleControllerImplClient.getAllSaleDetailModelName(searchText.getText());
                addModelsToTable(saleBikeDetailModels);
            } else if (searchCombo.getSelectedItem().equals("Colour")) {
                ArrayList<SaleBikeDetailModel> saleBikeDetailModels = SaleControllerImplClient.getAllSaleDetailColour(searchText.getText());
                addModelsToTable(saleBikeDetailModels);
            } else if (searchCombo.getSelectedItem().equals("Chassis No")) {
                ArrayList<SaleBikeDetailModel> saleBikeDetailModels = SaleControllerImplClient.getAllSaleDetailChassis(searchText.getText());
                addModelsToTable(saleBikeDetailModels);
            } else if (searchCombo.getSelectedItem().equals("Engine No")) {
                ArrayList<SaleBikeDetailModel> saleBikeDetailModels = SaleControllerImplClient.getAllSaleDetailEngine(searchText.getText());
                addModelsToTable(saleBikeDetailModels);
            }

        } catch (NotBoundException | MalformedURLException | RemoteException | SQLException | ClassNotFoundException ex) {
            Logger.getLogger(CreateNewSale.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_searchTextKeyReleased

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
//        try {
//            ArrayList<SaleBikeDetailModel> saleBikeDetailModels = SaleControllerImplClient.getAllSaleDetail();
//            addModelsToTable(saleBikeDetailModels);
//        } catch (NotBoundException | MalformedURLException | RemoteException | SQLException | ClassNotFoundException ex) {
//            Logger.getLogger(CreateNewSale.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }//GEN-LAST:event_formWindowActivated

    private void newPriceAnnouncement10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newPriceAnnouncement10ActionPerformed
        getStart();
    }//GEN-LAST:event_newPriceAnnouncement10ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        try {
            OrderControllerClient.removeObserver(createNewObserverble);
        } catch (NotBoundException | MalformedURLException | RemoteException | ClassNotFoundException | SQLException ex) {
            Logger.getLogger(CreateNewSale.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CreateNewSale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CreateNewSale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CreateNewSale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CreateNewSale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CreateNewSale().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel chassisNoLabel;
    private javax.swing.JLabel colourLabel;
    private javax.swing.JLabel commisionLabel;
    private javax.swing.JCheckBox consignmentCheck;
    private javax.swing.JLabel count;
    private javax.swing.JButton countinueSaleButton;
    private javax.swing.JLabel dealerMarginLabel;
    private javax.swing.JLabel engineNoLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel modelNameLabel;
    private javax.swing.JLabel netAmountLabel;
    private javax.swing.JLabel netRemittanceLabel;
    private javax.swing.JButton newPriceAnnouncement1;
    private javax.swing.JButton newPriceAnnouncement10;
    private javax.swing.JButton newPriceAnnouncement2;
    private javax.swing.JLabel optionLabel;
    private javax.swing.JComboBox priceAnnouncementCombo;
    private javax.swing.JLabel roundNoLabel;
    private javax.swing.JTable saleTable;
    private javax.swing.JComboBox searchCombo;
    private javax.swing.JTextField searchText;
    private javax.swing.JCheckBox specialConsignmentCheck;
    private javax.swing.JLabel specialNetRemittanceLabel;
    // End of variables declaration//GEN-END:variables

    private ArrayList<PriceAnnouncementModel> priceAnnouncementModels;
    private DefaultTableModel saleTableModel;
//    private SaleBikeDetailModel saleBikeDetailModelSelected;
    private ArrayList<SaleBikeDetailModel> saleBikeDetailModels;

    public void addModelToTable(SaleBikeDetailModel bikeDetailModel) {
        Object[] row = {bikeDetailModel.getRoundNo(), bikeDetailModel.getModelName().toUpperCase(), bikeDetailModel.getEngineNo(), bikeDetailModel.getChassisNo(), bikeDetailModel.getColour()};
        saleTableModel.addRow(row);
    }

    public void addModelsToTable(ArrayList<SaleBikeDetailModel> saleBikeDetailModels) {
        this.saleBikeDetailModels = saleBikeDetailModels;
        saleTableModel.setRowCount(0);
        for (SaleBikeDetailModel saleBikeDetailModel : saleBikeDetailModels) {
            addModelToTable(saleBikeDetailModel);
        }

        count.setText(String.valueOf(saleBikeDetailModels.size()));

        if (saleTable.getRowCount() > 0) {
            saleTable.setRowSelectionInterval(0, 0);
            saleTableClick();
        }
    }

    public void addPriceannouncement(PriceAnnouncementModel priceAnnouncementModel) {
        priceAnnouncementCombo.addItem(priceAnnouncementModel.getPriceAnnouncementDate());
        priceAnnouncementModels.add(priceAnnouncementModel);
    }

    public PriceAnnouncementModel getPriceAnnouncementId(String priceAnnouncementDate) {
        for (PriceAnnouncementModel priceAnnouncementModel : priceAnnouncementModels) {
            if (priceAnnouncementModel.getPriceAnnouncementDate().equals(priceAnnouncementDate)) {
                return priceAnnouncementModel;
            }
        }
        return null;
    }

    public SaleBikeDetailModel getModelId(String roundNo) {
        for (SaleBikeDetailModel saleBikeDetailModel : saleBikeDetailModels) {
            if (saleBikeDetailModel.getRoundNo().equals(roundNo)) {
                return saleBikeDetailModel;
            }
        }
        return null;
    }

    public void setDetail(BikeModel bikeModel, SaleBikeDetailModel bikeDetailModel) {
        roundNoLabel.setText(bikeDetailModel.getRoundNo());

        double netamount = Double.parseDouble(bikeModel.getNetAmount());
        double commision = Double.parseDouble(bikeModel.getCommision());
        double netremittance = netamount - commision;

        netAmountLabel.setText("Rs " + CurrancyFormat.getCurrancyFormat(netamount));
        commisionLabel.setText("Rs " + CurrancyFormat.getCurrancyFormat(commision));
        netRemittanceLabel.setText("Rs " + CurrancyFormat.getCurrancyFormat(netremittance));

        netAmountA = netamount;
        commisionA = commision;
        netRemittanceA = netremittance;

        modelNameLabel.setText(bikeDetailModel.getModelName().toUpperCase());
        optionLabel.setText(bikeModel.getBikeOption());
        colourLabel.setText(bikeDetailModel.getColour());
        engineNoLabel.setText(bikeDetailModel.getEngineNo());
        chassisNoLabel.setText(bikeDetailModel.getChassisNo());
    }

    public void saleTableClick() {
        consignmentCheck.setSelected(true);
        PriceAnnouncementModel priceAnnouncementModel = getPriceAnnouncementId((String) priceAnnouncementCombo.getSelectedItem());
        String priceAnnouncementId = priceAnnouncementModel.getPriceAnnouncementId();

        String roundNo = (String) saleTableModel.getValueAt(saleTable.getSelectedRow(), 0);
        saleBikeDetailModel = getModelId(roundNo);

        String modelId = "";
        if (saleBikeDetailModel != null) {
            modelId = saleBikeDetailModel.getModelId();
        }
        try {
            ArrayList<BikeModel> bikeModels = DeliveryNoteControllerClient.getBikeModel(modelId, priceAnnouncementId);
            if (bikeModels.size() == 0) {
                resetWindow();
            } else {
                consignmentCheck.setEnabled(true);
                specialConsignmentCheck.setEnabled(true);
                canCountinue = true;
            }
            Iterator<BikeModel> iterator = bikeModels.iterator();
            if (iterator.hasNext()) {
                bikeModel = iterator.next();
                setDetail(bikeModel, saleBikeDetailModel);

                String bikeModelId = bikeModel.getBikeModelId();
                SpecialDealerModel specialDealerModel = SaleControllerImplClient.getSpecialConsignmentDealer(bikeModelId);

                if (specialDealerModel == null) {
                    jPanel4.setVisible(false);
                    specialConsignmentCheck.setEnabled(false);
                } else {
                    double sellingPrice = Double.parseDouble(bikeModel.getNetAmount());
                    double specialPrice = Double.parseDouble(specialDealerModel.getSpecialPrice());
                    double dealerMargine = Double.parseDouble(specialDealerModel.getDealerMargine());

                    dealerMarginLabel.setText("Rs " + CurrancyFormat.getCurrancyFormat(dealerMargine));
                    specialNetRemittanceLabel.setText("Rs " + CurrancyFormat.getCurrancyFormat(specialPrice));
                    specialNetAmountA = specialPrice;

                    dealerMargineA = dealerMargine;
                    specialNetRemittanceA = specialPrice - dealerMargine;

                    jPanel4.setVisible(true);
                    specialConsignmentCheck.setEnabled(true);
                }
            }

        } catch (NotBoundException | MalformedURLException | ClassNotFoundException | RemoteException | SQLException ex) {
            Logger.getLogger(CreateNewSale.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private boolean canCountinue;

    public void resetWindow() {
        jPanel4.setVisible(false);
        commisionLabel.setText("");
        netRemittanceLabel.setText("");
        roundNoLabel.setText("");
        modelNameLabel.setText("");
        optionLabel.setText("");
        chassisNoLabel.setText("");
        colourLabel.setText("");
        engineNoLabel.setText("");
        netAmountLabel.setText("");
        consignmentCheck.setSelected(true);
        consignmentCheck.setEnabled(false);
        specialConsignmentCheck.setEnabled(false);
        canCountinue = false;
    }

    public void removeStock(String roundNo) {
        int rowCount = saleTable.getRowCount();
        
        for (int i = 0; i < rowCount; i++) {
            String rNo = (String) saleTableModel.getValueAt(i, 0);
            if (rNo.equals(roundNo)) {
                saleTableModel.removeRow(i);
                break;
            }
        }
    }
}
